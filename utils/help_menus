#!/bin/bash

. "$GRPL_WORKDIR/utils/common"

generate_cli_web_doc() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    grpl_cli_help $WEB_DOC
    grpl_cluster_cli_help $WEB_DOC
    grpl_example_cli_help $WEB_DOC
    grpl_install_cli_help $WEB_DOC
    grpl_upgrade_cli_help $WEB_DOC
    grpl_version_cli_help $WEB_DOC
    grpl_application_cli_help $WEB_DOC
    grpl_application_init_cli_help $WEB_DOC
    grpl_cluster_create_cli_help $WEB_DOC
    grpl_cluster_install_cli_help $WEB_DOC
    grpl_cluster_status_cli_help $WEB_DOC
    grpl_example_deploy_cli_help $WEB_DOC
    grpl_example_status_cli_help $WEB_DOC
    grpl_resource_cli_help $WEB_DOC
    grpl_resource_deploy_cli_help $WEB_DOC
    grpl_dev_cli_help $WEB_DOC
    grpl_grapi_cli_help $WEB_DOC
    grpl_gruim_cli_help $WEB_DOC
     doc="
= grpl cli Documentation
:toc: 

== Introduction

the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/[grapple solution^]


$grpl_cli_doc
$grpl_application_doc
$grpl_application_init_doc
$grpl_cluster_doc
$grpl_cluster_create_doc
$grpl_cluster_install_doc
$grpl_cluster_status_doc
$grpl_example_doc
$grpl_example_deploy_doc
$grpl_example_status_doc
$grpl_resource_doc
$grpl_resource_deploy_doc
$grpl_install_doc
$grpl_upgrade_doc
$grpl_version_doc
$grpl_dev_doc
$grpl_grapi_doc
$grpl_gruim_doc
"
echo "$doc" > "$GRPL_WORKDIR/grpl-cli-web-doc.adoc"
        asciidoctor "$GRPL_WORKDIR/grpl-cli-web-doc.adoc"
        status_log $TYPE_INFO "please visit file://$GRPL_WORKDIR/grpl-cli-web-doc.html to view the grpl documentation"
        
}

generate_crds_web_doc() {

    gras_doc=$(kubectl explain gras.spec)
    grapi_doc=$(kubectl explain grapi.spec)
    gruim_doc=$(kubectl explain gruim.spec)
    status_log $TYPE_INFO "Going to generate grapple web doc. This might take some time"
    crds_doc="
= grpl CRDs Documentation
:toc: 

== Introduction

the grapple CRDs

https://grapple-solutions.com/[grapple solution^]


$(echo "$gras_doc" | transform_crds_docs_into_web_docs_format "gras.spec" "== gras")
$(echo "$grapi_doc" | transform_crds_docs_into_web_docs_format "grapi.spec" "== grapi")
$(echo "$gruim_doc" | transform_crds_docs_into_web_docs_format "gruim.spec" "== gruim")

"

echo "$crds_doc" > "$GRPL_WORKDIR/grpl-crds-web-doc.adoc"
        asciidoctor "$GRPL_WORKDIR/grpl-crds-web-doc.adoc"
        status_log $TYPE_INFO "please visit file://$GRPL_WORKDIR/grpl-crds-web-doc.html to view the grpl documentation"
        
}


grpl_web_doc_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl doc"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl doc"
        meta=""
    fi

    grpl_doc="
$cli_name
$meta

Usage: 

    grpl doc [command]

Commands:

    h or help     Help menu
    cli           to generate web documentation for grpl cli 
    crds          to generate web documentation for custom grpl CRDs
    
Examples:

    grpl d h        or        grpl doc help
    grpl d cli      or        grpl doc cli
    grpl d crds     or        grpl doc crds
"

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_doc"  >&2
    fi
}




grpl_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl"
        meta=""
    fi

    grpl_cli_doc="
$cli_name
$meta
Usage: 

    grpl [command]

Commands:

    i or install                Installation
    c or cluster                Cluster commands
    e or example                Example commands
    v or version                List version
    u or upgrade                Upgrade grpl
    a or app or application     Initialize grpl application
    d or doc                    Documentation
    dev                         Devspace Dev
    grapi                       Grapi commands
    gruim                       Gruim commands
    *                           Help menu
    
Examples:    

    grpl i [commands]    or    grpl install [commands]
    grpl c [commands]    or    grpl cluster [commands]     
    grpl e [commands]    or    grpl example [commands]     
    grpl v [commands]    or    grpl version [commands]     
    grpl u [commands]    or    grpl upgrade [commands]  
    grpl a [commands]    or    grpl app     [commands]    or    grpl application [commands] 
    grpl d [commands]    or    grpl doc     [commands]
    grpl dev [commands]
    grpl grapi [commands]
    grpl gruim [commands]
    grpl *

"
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_cli_doc"  >&2
    fi
}

grpl_application_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl application"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl application"
        meta=""
    fi

    grpl_application_doc="
$cli_name
$meta

Usage: 

    grpl application [command]

Commands:

    i or init       Initialize new grpl application
    *               Help menu
    
Examples:    

    grpl a i    or    grpl app init    or    grpl application init
    grpl a *    or    grpl app *       or    grpl application *

"
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_application_doc"  >&2
    fi
}


grpl_cluster_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl cluster"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl cluster"
        meta=""
    fi

    grpl_cluster_doc="
$cli_name
$meta

Usage: 

    grpl cluster [command]

Commands:

    s or status     Cluster status
    i or install    Cluster installation
    c or create     Cluster creation
    *               Help menu
    
Examples:    

    grpl c s    or    grpl cluster status
    grpl c i    or    grpl cluster install      
    grpl c c    or    grpl cluster create  
    grpl c *    or    grpl cluster *

"
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_cluster_doc"  >&2
    fi
}

grpl_example_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl example"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl example"
        meta=""
    fi

    grpl_example_doc="
$cli_name
$meta

Usage: 

    grpl example [command]

Commands:

    s or status     status of example
    d or deploy     deploy an example
    *               Help menu
    
Examples:    

    grpl e s    or    grpl example status
    grpl e d    or    grpl example deploy
    grpl e *    or    grpl example *

" 
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_example_doc"  >&2
    fi
}


grpl_install_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl install"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl install"
        meta=""
    fi

    grpl_install_doc="
$cli_name
$meta

Usage: 

    grpl install [command]

" 
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_install_doc"  >&2
    fi
}


grpl_upgrade_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl upgrade"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl upgrade"
        meta=""
    fi

    grpl_upgrade_doc="
$cli_name
$meta

Usage: 
    
    grpl upgrade [command]

Commands:

    h or help     Help menu
    *             to upgrade
    
Examples:    

    grpl u h    or    grpl upgrade help
    grpl u *    or    grpl upgrade *

" 
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_upgrade_doc"  >&2
    fi
}


grpl_version_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl version"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl version"
        meta=""
    fi

    grpl_version_doc="
$cli_name
$meta

Usage: 

    grpl version [command]

Commands:

    h or help     Help menu
    *             to get version details
    
Examples:    

    grpl v h    or    grpl version help
    grpl v *    or    grpl version *

" 
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_version_doc"  >&2
    fi
}



grpl_cluster_create_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl cluster create"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="=== grpl cluster create"
        meta=""
    fi

    grpl_cluster_create_doc="
$cli_name
$meta

Usage: 

    grpl cluster create [command]

Commands:

    h or help     Help menu
    *             to create cluster
    
Examples:    

    grpl c c h    or    grpl cluster create help
    grpl c c *    or    grpl cluster create *
"

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_cluster_create_doc"  >&2
    fi
}


grpl_cluster_install_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl cluster install"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="=== grpl cluster install"
        meta=""
    fi

    grpl_cluster_install_doc="
$cli_name
$meta

Usage: 

  grpl cluster install [command]

Usage with params from cli: 

  grpl cluster install --params --<variable-name>=<variable value>
  e.g grpl cluster install --params --GRAPPLE_VERSION=0.2.1
  OR
  grpl cluster install --params --<variable-name> <variable value>
  e.g grpl cluster install --params --GRAPPLE_VERSION 0.2.1

Usage with params from configfile: 

  grpl cluster install --configfile <file-name>.json
  e.g grpl cluster install --configfile grpl-config.json

Usage with values yaml: 

  grpl cluster install --values <file1>.yaml <file2>.yaml
  e.g grpl cluster install --values config-values.yaml config-values2.yaml

Commands:

    h or help     Help menu
    *             to install cluster
    
Examples:    

    grpl c i h    or    grpl cluster install help
    grpl c i *    or    grpl cluster install *


Variables:

  TARGET_PLATFORM=CIVO / Kubernetes / minikube
  # general configurations
  GRAPPLE_VERSION = version of the grapple deployment (e.g. '0.2.0' or '0.2.1')
  AUTO_CONFIRM='false' / 'true'
  # kubernetes related configurations
  KUBE_CONTEXT=kubernetes context
  # minikube related configurations
  # no additional configurations
  # CIVO related configurations
  CIVO_REGION=Available CIVO regions (e.g. FRA1)
  CIVO_CLUSTER=CIVO cluster
  CIVO_CLUSTER_ID=CIVO cluster ID
  CIVO_MASTER_IP=CIVO cluster master IP address
  CIVO_EMAIL_ADDRESS=email address of your CIVO account
  CIVO_API_KEY=api key of your CIVO account

" 

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_cluster_install_doc"  >&2
    fi
}


grpl_cluster_status_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl cluster status"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="=== grpl cluster status"
        meta=""
    fi

    grpl_cluster_status_doc="
$cli_name
$meta

Usage: 

    grpl cluster status [command]

Commands:

    h or help     Help menu
    *             to get cluster status
    
Examples:    

    grpl c s h    or    grpl cluster status help
    grpl c s *    or    grpl cluster status *
"

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_cluster_status_doc"  >&2
    fi
}



grpl_example_deploy_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl example deploy"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="=== grpl example deploy"
        meta=""
    fi

    grpl_example_deploy_doc="
$cli_name
$meta

Usage: 

    grpl example deploy [command]

Commands:

    h or help     Help menu
    *             to get deploy example test-cases
    
Examples:    

    grpl e d h    or    grpl example deploy help
    grpl e d *    or    grpl example deploy *

Variables:

  example   all / db / dbfile
  EDITION="grpl-basic-all" / "grpl-basic" / "grpl-basic-db" / "grpl-basic-dbfile"
" 

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_example_deploy_doc"  >&2
    fi
}



grpl_example_status_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl example status"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="=== grpl example status"
        meta=""
    fi

    grpl_example_status_doc="
$cli_name
$meta

Usage: 

    grpl example status [command]

Commands:

    h or help     Help menu
    *             to get example status
    
Examples:    

    grpl e s h    or    grpl example status help
    grpl e s *    or    grpl example status *
"

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_example_status_doc"  >&2
    fi
}



grpl_application_init_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl application init"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="=== grpl application init"
        meta=""
    fi

    grpl_application_init_doc="
$cli_name
$meta

Usage: 

    grpl application init [command]

Commands:

    h or help     Help menu
    *             to Initialize a grpl application
    
Examples:    

    grpl a i h    or    grpl app init help    or    grpl application init help
    grpl a i *    or    grpl app init *       or    grpl application init *

Variables:

    PROJECT_NAME=Name of the project
    RESOURCE_TEMPLATE=Resource of the template
"

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_application_init_doc"  >&2
    fi
}


grpl_resource_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl resource"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl resource"
        meta=""
    fi

    grpl_resource_doc="
$cli_name
$meta

Usage: 

    grpl resource [command]

Commands:

    d or deploy     to deploy a grpl template
    r or render     to render a grpl template
    *               Help menu
    
Examples:    

    grpl r d    or    grpl resource deploy
    grpl r r    or    grpl resource render
    grpl r *    or    grpl resource *     

"
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_resource_doc"  >&2
    fi
}

grpl_resource_deploy_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl resource deploy"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="=== grpl resource deploy"
        meta=""
    fi

    grpl_resource_deploy_doc="
$cli_name
$meta

Usage: 

    grpl resource deploy [command]

Usage with params from cli: 

  grpl resource deploy --params --<variable-name>=<variable value>
  e.g grpl resource deploy --params --GRAS_TEMPLATE=db-file
  OR
  grpl resource deploy --params --<variable-name> <variable value>
  e.g grpl resource deploy --params --GRAS_TEMPLATE=db-file

Usage with params from configfile: 

  grpl resource deploy --configfile <file-name>.json
  e.g grpl resource deploy --configfile grpl-config.json

Commands:

    h or help     Help menu
    *             to deploy grpl template
    
Examples:    

    grpl r d h    or    grpl resource deploy help
    grpl r d *    or    grpl resource deploy *

Variable:

    KUBECTL_CONTEXT: kubectl context you want to use e.g minikube, civo, etc
    GRAS_NAME: name of the project
    GRAS_TEMPLATE: gras template e.g db-file, etc
    SOURCE_DATA: source of the data
    DB_FILE_PATH: path where data is stored, default path is /data/db.json
    DB_TYPE: db type it can either internal or external
    ENABLE_GRUIM: to enable gruim, it can either be "Yes" or "No"
    MODELS: input of models 
    RELATIONS: models relations
    KUBE_NS: namespace to deploy gras, default ns is 'default'
    DATASOURCES: data sources configs
    DISCOVERIES: discoveries configs
    DATABASE_SCHEMA: database schema you want to use
    AUTO_DISCOVERY: to enable auto discovery
    
"

    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_resource_deploy_doc"  >&2
    fi
}


grpl_dev_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl dev"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl dev"
        meta=""
    fi

    grpl_dev_doc="
$cli_name
$meta

Usage: 

    grpl dev [command]

Commands:

    h or help                           Help menu
    dev                                 to run to start grapple
    dev ns <namespace>                  to set namespace for grapple
    dev enter grapi                     to enter grapi container
    dev enter gruim                     to enter grapi container
    dev <any command>                   to run any devspace <command>
    
Examples:    

    grpl dev h    or    grpl dev help
    grpl dev
    grpl dev ns grapple-namespace
    grpl enter grapi
    grpl enter gruim
    grpl dev <any comamnd>   

"
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_dev_doc"  >&2
    fi
}



grpl_grapi_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl grapi"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl grapi"
        meta=""
    fi

    grpl_grapi_doc="
$cli_name
$meta

Usage: 

    grpl dev [command]

Commands:

    h or help                           Help menu
    grapi migrate-db                    to migrate db
    grapi --help                        to get list of grapi commands
    grapi <any command>                 to run any grapi command
    
Examples:    

    grpl dev h    or    grpl dev help
    grpl grapi migrate-db 
    grpl grapi --help
    grpl grapi <any comamnd>   

"
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_grapi_doc"  >&2
    fi
}



grpl_gruim_cli_help() {

    if ! grep -q "." "$GRPL_WORKDIR/VERSION" >/dev/null 2>&1; then 
      extract_grapple_cli_version
    fi

    type=$1
    cli_name="grpl gruim"
    meta="
the grapple cli

Version: $(cat $GRPL_WORKDIR/VERSION)

https://grapple-solutions.com/
"
    if [ "$type" == $WEB_DOC ]; then
        cli_name="== grpl gruim"
        meta=""
    fi

    grpl_gruim_doc="
$cli_name
$meta

Usage: 

    grpl dev [command]

Commands:

    h or help                           Help menu
    gruim rebuild                       to rebuild gruim
    gruim --help                        to get list of gruim commands
    gruim <any command>                 to run any gruim command
    
Examples:    

    grpl dev h    or    grpl dev help
    grpl gruim rebuild 
    grpl gruim --help
    grpl gruim <any comamnd>   

"
    if [ "$type" == $WEB_DOC ]; then
        return 0
    else
        echo "$grpl_gruim_doc"  >&2
    fi
}