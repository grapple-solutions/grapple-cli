#!/bin/bash
set -e
. "$GRPL_WORKDIR/utils/common"
. "$GRPL_WORKDIR/utils/help_menus"


# valid arguments array
valid_args=(
    "GRAS_TEMPLATE"
    "DB_TYPE"
  )

# check if values are already passed form terminal
# if yes? then store then in the respective vars
extract_input_params_from_cli $valid_args "grpl r d h" $(echo "$@")


#check if input from params is valid or not
if [ "${GRAS_TEMPLATE}" != "" ]; then 
  is_correct_grapple_applicationsets_provided $GRAS_TEMPLATE 
fi
GRAS_TEMPLATE=$(if [ "${GRAS_TEMPLATE}" != "" ]; then echo ${GRAS_TEMPLATE}; else gum choose  --header "Please select template you want create" $DB_FILE $DB_MYSQL_MODEL_BASED $DB_MYSQL_DISCOVERY_BASED; fi) || exit $?
status_log $TYPE_DEFAULT "GRAS_TEMPLATE: ${GRAS_TEMPLATE}"


if [[ "${GRAS_TEMPLATE}" == $DB_FILE ]]; then
  ./grpl r d --params --KUBECTL_CONTEXT=grpl-ekekenta --GRAS_NAME=gras-patrick --GRAS_TEMPLATE=db-file --DATA_SOURCE="https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/db.json" --MODELS='customers:{"base":"Entity","name":"customers","properties":{"addressLine1":{"type":"string"},"addressLine2":{"type":"string"},"city":{"type":"string"},"contactFirstName":{"type":"string"},"contactLastName":{"type":"string"},"country":{"type":"string"},"creditLimit":{"type":"number"},"customerName":{"type":"string"},"id":{"generated":true,"defaultFn":"uuid","id":true,"required":true,"type":"string"},"generatedValue":{"generated":true,"defaultFn":999,"id":false,"required":true,"type":"number"},"phone":{"type":"string"},"postalCode":{"type":"string"},"state":{"type":"string"}}}|employees:{"base":"Entity","name":"employees","properties":{"country":{"type":"string"},"creditLimit":{"type":"number"},"email":{"type":"string"},"extension":{"type":"string"},"firstName":{"type":"string"},"id":{"generated":true,"defaultFn":"uuid","id":true,"required":true,"type":"string"},"jobTitle":{"type":"string"},"lastName":{"type":"string"},"officesId":{"type":"string"},"postalCode":{"type":"string"},"reportsTo":{"type":"number"},"state":{"type":"string"},"createdAt":{"generated":true,"defaultFn":"now"}}}' --DB_FILE_PATH=/tmp/data.json --ENABLE_GRUIM=false  --RELATIONS=""
  exit 0
fi


#check if input from params is valid or not
if [ "${DB_TYPE}" != "" ]; then 
  is_correct_db_type_provided $DB_TYPE 
fi
DB_TYPE=$(if [ "${DB_TYPE}" != "" ]; then echo ${DB_TYPE}; else gum choose  --header "Please select the database type you want" $INTERNAL_DB $EXTERNAL_DB; fi) || exit $?
status_log $TYPE_DEFAULT "DB_TYPE: ${DB_TYPE}"
