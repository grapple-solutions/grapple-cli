#!/bin/bash
set -e
. "$GRPL_WORKDIR/utils/common"
. "$GRPL_WORKDIR/utils/checks"
. "$GRPL_WORKDIR/utils/help_menus"


cli_help() {
  grpl_example_deploy_cli_help
  exit 0
}

[ "$1" = "help" ] || [ "$1" = "h" ] && cli_help


# valid arguments array
valid_args=(
    "GRAS_TEMPLATE"
    "DB_TYPE"
  )

# check if values are already passed form terminal
# if yes? then store then in the respective vars
extract_input_params_from_cli $valid_args "grpl r d h" $(echo "$@")


#check if input from params is valid or not
if [ "${GRAS_TEMPLATE}" != "" ]; then 
  is_correct_grapple_applicationsets_provided $GRAS_TEMPLATE 
fi
GRAS_TEMPLATE=$(if [ "${GRAS_TEMPLATE}" != "" ]; then echo ${GRAS_TEMPLATE}; else gum choose  --header "Please select template you want create" $DB_FILE $DB_MYSQL_MODEL_BASED $DB_MYSQL_DISCOVERY_BASED; fi) || exit $?
status_log $TYPE_DEFAULT "GRAS_TEMPLATE: ${GRAS_TEMPLATE}"


KUBECTL_CONTEXT=$(kubectl config get-contexts --no-headers -o name)

MODELS='customer:{"base":"Entity","name":"customer","properties":{"id":{"type":"number","id":true,"required":true,"generated":true},"customername":{"type":"string"},"emaildomain":{"type":"string","required":true},"datecreated":{"type":"date","required":false},"datelastupdated":{"type":"date","required":false}}}|email:{"base":"Entity","name":"email","properties":{"id":{"type":"number","id":true,"required":true,"generated":true},"emaildomain":{"type":"string","required":true},"email":{"type":"string","required":true}}}|cluster:{"base":"Entity","name":"cluster","properties":{"id":{"type":"number","id":true,"required":true,"generated":true},"clustername":{"type":"string"},"clusteridentifier":{"type":"string"},"clusterdns":{"type":"string"},"customerId":{"type":"string"},"emailId":{"type":"string","required":true},"datecreated":{"type":"date","required":false},"datelastupdated":{"type":"date","required":false}}}'

DATASOURCES='classicmodelsid:{"name":"classicmodelsid","connector":"mysql","url":"","host":"aurora-mysql-test.cpfyybdyajmx.eu-central-1.rds.amazonaws.com","port":"3306","user":"admin","password":"florida2012","database":"classicmodelsid"}'

SOURCE_DATA=https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql

# grpl r d db-file
if [[ "${GRAS_TEMPLATE}" == $DB_FILE ]]; then
  grpl r d --params --KUBECTL_CONTEXT=$KUBECTL_CONTEXT --GRAS_NAME=gras-$DB_FILE --KUBE_NS=gras-$DB_FILE --GRAS_TEMPLATE=$DB_FILE --SOURCE_DATA="https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/db.json" --MODELS=$MODELS --DB_FILE_PATH=/tmp/data.json --ENABLE_GRUIM=false  --RELATIONS=""
  exit 0
fi


#check if input from params is valid or not
if [ "${DB_TYPE}" != "" ]; then 
  is_correct_db_type_provided $DB_TYPE 
fi
DB_TYPE=$(if [ "${DB_TYPE}" != "" ]; then echo ${DB_TYPE}; else gum choose  --header "Please select the database type you want" $INTERNAL_DB $EXTERNAL_DB; fi) || exit $?
status_log $TYPE_DEFAULT "DB_TYPE: ${DB_TYPE}"


#grpl r d mysql model  internal
if [[ "${GRAS_TEMPLATE}" == $DB_MYSQL_MODEL_BASED ]] && [[ "${DB_TYPE}" != $INTERNAL_DB ]]; then
  grpl r d --params --KUBECTL_CONTEXT=${KUBECTL_CONTEXT} --GRAS_NAME=gras-$DB_MYSQL_MODEL_BASED-$INTERNAL_DB --KUBE_NS=gras-$DB_MYSQL_MODEL_BASED-$INTERNAL_DB --GRAS_TEMPLATE=$DB_MYSQL_MODEL_BASED --DB_TYPE=$INTERNAL_DB --DATABASE_SCHEMA=classicmodelsid --MODELS=$MODELS --RELATIONS="" --ENABLE_GRUIM=true --SOURCE_DATA=$SOURCE_DATA
  exit 0
fi


#grpl r d mysql model  external
if [[ "${GRAS_TEMPLATE}" == $DB_MYSQL_MODEL_BASED ]] && [[ "${DB_TYPE}" != $EXTERNAL_DB ]]; then
  grpl r d --params --KUBECTL_CONTEXT=${KUBECTL_CONTEXT} --GRAS_NAME=gras-$DB_MYSQL_MODEL_BASED-$EXTERNAL_DB --KUBE_NS=gras-$DB_MYSQL_MODEL_BASED-$EXTERNAL_DB --GRAS_TEMPLATE=$DB_MYSQL_MODEL_BASED --DB_TYPE=$EXTERNAL_DB --DATABASE_SCHEMA=classicmodelsid --MODELS=$MODELS --DATASOURCES=$DATASOURCES --RELATIONS=""  --ENABLE_GRUIM=true --SOURCE_DATA=SOURCE_DATA
  exit 0
fi

#grpl r d mysql discovery  internal
if [[ "${GRAS_TEMPLATE}" == $DB_MYSQL_DISCOVERY_BASED ]] && [[ "${DB_TYPE}" != $INTERNAL_DB ]]; then
  grpl r d --params --KUBECTL_CONTEXT=$KUBECTL_CONTEXT --GRAS_NAME=gras-$DB_MYSQL_DISCOVERY_BASED-$INTERNAL_DB --KUBE_NS=gras-$DB_MYSQL_DISCOVERY_BASED-$INTERNAL_DB --GRAS_TEMPLATE=$DB_MYSQL_DISCOVERY_BASED --DB_TYPE=$INTERNAL_DB --SOURCE_DATA=SOURCE_DATA --AUTO_DISCOVERY=true --RELATIONS="" --ENABLE_GRUIM=true
  exit 0
fi

#grpl r d mysql discovery  external
if [[ "${GRAS_TEMPLATE}" == $DB_MYSQL_DISCOVERY_BASED ]] && [[ "${DB_TYPE}" != $EXTERNAL_DB ]]; then
  grpl r d --params --KUBECTL_CONTEXT=$KUBECTL_CONTEXT --GRAS_NAME=gras-$DB_MYSQL_DISCOVERY_BASED-$EXTERNAL_DB --KUBE_NS=gras-$DB_MYSQL_DISCOVERY_BASED-$EXTERNAL_DB --GRAS_TEMPLATE=$DB_MYSQL_DISCOVERY_BASED --DB_TYPE=$EXTERNAL_DB --DATASOURCES=$DATASOURCES --SOURCE_DATA=SOURCE_DATA --AUTO_DISCOVERY=true --RELATIONS="" --ENABLE_GRUIM=true
  exit 0
fi