#!/bin/bash

set -e
. "$GRPL_WORKDIR/utils/common"
. "$GRPL_WORKDIR/utils/help_menus"

cli_help() {
  grpl_grapi_cli_help
  exit 0
}

[ "$1" = "help" ] || [ "$1" = "h" ] || [ $# = 0 ]  && cli_help

install_prerequisite
check_and_install_devspace

cli_args=$@

# "grpl grapi migrate-db" case
if [[ $# == 1 ]] && [[ "$1" == "migrate-db" ]]; then
    devspace run migrate-db
    exit 0
fi

# "grpl grapi export" case
if [[ $1 == "export" ]]; then

    IFS='=' read -r var_name var_value <<< "$2"
    env_var="grapi_env_var_$var_name='$var_value'"
    echo "$env_var" >> ~/.bashrc
    echo "exported $var_name successfully"
    exit 0

fi

# enter grapi container case
if [[ $# == 1 ]] && [[ "$1" == "enter" ]]; then
    
    if grep "grapi_env_var" ~/.bashrc >/dev/null; then {
        grapi_vars=$(grep "grapi_env_var" ~/.bashrc)
        mapfile -t grapi_vars < <(grep "grapi_env_var" ~/.bashrc)

        env_vars=""
        for var in "${grapi_vars[@]}"
        do
            result="${var#grapi_env_var_}"
            env_vars="$env_vars $result"
        done

        devspace enter  --label-selector app.kubernetes.io/name=grapi -- env $env_vars /bin/bash 
    } else {
        devspace enter  --label-selector app.kubernetes.io/name=grapi
    }
    fi

    exit 0
fi

# check to see if grapi prefex needs to be added or not
devspace enter --label-selector app.kubernetes.io/name=grapi -- $cli_args
exit 0