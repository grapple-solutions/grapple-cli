#!/bin/bash

set -e
. "$GRPL_WORKDIR/utils/common"
. "$GRPL_WORKDIR/utils/help_menus"

cli_help() {
  grpl_gruim_cli_help
  exit 0
}

[ "$1" = "help" ] || [ "$1" = "h" ] || [ $# = 0 ]  && cli_help

install_prerequisite
check_and_install_devspace

cli_args=$@

# "grpl gruim migrate-db" case
if [[ $# == 1 ]] && [[ "$1" == "rebuild" ]]; then
    devspace run gruim rebuild
    exit 0
fi

# "grpl gruim export" case
if [[ $1 == "export" ]]; then

    IFS='=' read -r var_name var_value <<< "$2"
    env_var="gruim_env_var_$var_name='$var_value'"
    echo "$env_var" >> ~/.bashrc
    echo "exported $var_name successfully"
    exit 0
fi

# enter gruim container case
if [[ $# == 1 ]] && [[ "$1" == "enter" ]]; then
    
    if grep "gruim_env_var" ~/.bashrc; then {
        gruim_vars=$(grep "gruim_env_var" ~/.bashrc)
        mapfile -t gruim_vars < <(grep "gruim_env_var" ~/.bashrc)

        env_vars=""
        for var in "${gruim_vars[@]}"
        do
            result="${var#gruim_env_var_}"
            env_vars="$env_vars $result"
        done

        echo "$env_vars"

        devspace enter  --label-selector app.kubernetes.io/name=gruim -- env $env_vars /bin/sh
    } else {
        devspace enter  --label-selector app.kubernetes.io/name=gruim
    }
    fi

    exit 0
fi


devspace enter --label-selector app.kubernetes.io/name=gruim -- gruim $cli_args
exit 0