#!/bin/bash



gras_db_file_gras=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApplicationSet
metadata:
  annotations:
    meta.helm.sh/release-name: gras-db-file
    meta.helm.sh/release-namespace: gras-db-file
  creationTimestamp: "2024-12-06T12:47:22Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/managed-by: Helm
  name: gras-db-file
  namespace: gras-db-file
  resourceVersion: "257557"
  uid: 9d77367d-a062-40b1-baab-54c331dadeae
spec:
  compositeDeletePolicy: Background
  compositionRef:
    name: gras.grsf.grpl.io
  compositionRevisionRef:
    name: gras.grsf.grpl.io-9611850
  compositionUpdatePolicy: Automatic
  grapis:
  - name: gras-db-file
    spec:
      datasources:
      - name: db
        spec:
          memory:
            connector: memory
            file: /tmp/data.json
            localStorage: db
            name: db
      discoveredrepos: true
      ingress: true
      initContainers:
      - name: test
        spec:
          command:
          - sh
          - -c
          - if ! test -f /tmp/data.json; then wget -O /tmp/data.json https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/db.json;
            chmod 777 /tmp/data.json; fi
          image: busybox:1.28
          name: init-db
      models:
      - name: customer
        spec:
          base: Entity
          name: customer
          properties:
            customername:
              type: string
            datecreated:
              required: false
              type: date
            datelastupdated:
              required: false
              type: date
            emaildomain:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      - name: email
        spec:
          base: Entity
          name: email
          properties:
            email:
              required: true
              type: string
            emaildomain:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      - name: cluster
        spec:
          base: Entity
          name: cluster
          properties:
            clusterdns:
              type: string
            clusteridentifier:
              type: string
            clustername:
              type: string
            customerId:
              type: string
            datecreated:
              required: false
              type: date
            datelastupdated:
              required: false
              type: date
            emailId:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      restcruds:
      - name: restcrud
        spec:
          datasource: db
      volumeMounts:
      - mountPath: /data
        name: data
      volumes:
      - emptyDir: {}
        name: data
  gruims:
  - name: gras-db-file
    spec:
      additionalpackages: ""
      config: ""
      style: '{"colors":{"primary":{"DEFAULT":"#34344A","fg":"#fff"},"accent":{"DEFAULT":"#CC5A71","fg":"#fff"}}}'
  name: gras-db-file
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApplicationSet
    name: gras-db-file-hjnnh
status:
  conditions:
  - lastTransitionTime: "2024-12-06T12:47:22Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T12:47:32Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)



gras_db_file_grapi=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApi
metadata:
  annotations:
    meta.helm.sh/release-name: gras-db-file-gras
    meta.helm.sh/release-namespace: gras-db-file
  creationTimestamp: "2024-12-06T12:47:28Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: grapi
    app.kubernetes.io/managed-by: Helm
  name: gras-db-file
  namespace: gras-db-file
  resourceVersion: "257823"
  uid: 6ed33586-7add-4808-85df-1637d68f874e
spec:
  asname: gras-db-file
  autorestartgruim: false
  compositeDeletePolicy: Background
  compositionRef:
    name: grapi.grsf.grpl.io
  compositionRevisionRef:
    name: grapi.grsf.grpl.io-64e9461
  compositionUpdatePolicy: Automatic
  datasources:
  - name: db
    spec:
      memory:
        connector: memory
        file: /tmp/data.json
        localStorage: db
        name: db
  discoveredrepos: true
  ingress: true
  initContainers:
  - name: test
    spec:
      command:
      - sh
      - -c
      - if ! test -f /tmp/data.json; then wget -O /tmp/data.json https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/db.json;
        chmod 777 /tmp/data.json; fi
      image: busybox:1.28
      name: init-db
  models:
  - name: customer
    spec:
      base: Entity
      name: customer
      properties:
        customername:
          type: string
        datecreated:
          required: false
          type: date
        datelastupdated:
          required: false
          type: date
        emaildomain:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  - name: email
    spec:
      base: Entity
      name: email
      properties:
        email:
          required: true
          type: string
        emaildomain:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  - name: cluster
    spec:
      base: Entity
      name: cluster
      properties:
        clusterdns:
          type: string
        clusteridentifier:
          type: string
        clustername:
          type: string
        customerId:
          type: string
        datecreated:
          required: false
          type: date
        datelastupdated:
          required: false
          type: date
        emailId:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApi
    name: gras-db-file-rcr2j
  restcruds:
  - name: restcrud
    spec:
      datasource: db
  volumeMounts:
  - mountPath: /data
    name: data
  volumes:
  - emptyDir: {}
    name: data
status:
  conditions:
  - lastTransitionTime: "2024-12-06T12:47:28Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T12:47:39Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

gras_db_file_gruim=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleUiModule
metadata:
  annotations:
    meta.helm.sh/release-name: gras-db-file-gras
    meta.helm.sh/release-namespace: gras-db-file
  creationTimestamp: "2024-12-06T12:47:28Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: gruim
    app.kubernetes.io/managed-by: Helm
  name: gras-db-file
  namespace: gras-db-file
  resourceVersion: "257905"
  uid: 006a3311-3c43-49c4-b7cd-54ec2e169aa3
spec:
  additionalpackages: ""
  asname: gras-db-file
  compositeDeletePolicy: Background
  compositionRef:
    name: gruim.grsf.grpl.io
  compositionRevisionRef:
    name: gruim.grsf.grpl.io-c341603
  compositionUpdatePolicy: Automatic
  config: ""
  mapi: gras-db-file-gras-db-file-grapi-mapi
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleUiModule
    name: gras-db-file-dr74q
  style: '{"colors":{"primary":{"DEFAULT":"#34344A","fg":"#fff"},"accent":{"DEFAULT":"#CC5A71","fg":"#fff"}}}'
status:
  conditions:
  - lastTransitionTime: "2024-12-06T12:47:28Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T12:47:43Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_mdl_int_mysql_gras=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApplicationSet
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql
    meta.helm.sh/release-namespace: grpl-mdl-int
  creationTimestamp: "2024-12-06T13:21:15Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-mdl-int
  resourceVersion: "267286"
  uid: ffae2862-894a-4e87-b58e-485051abf3b9
spec:
  compositeDeletePolicy: Background
  compositionRef:
    name: gras.grsf.grpl.io
  compositionRevisionRef:
    name: gras.grsf.grpl.io-9611850
  compositionUpdatePolicy: Automatic
  grapis:
  - name: gras-mysql
    spec:
      automigrate: true
      datasources:
      - name: classicmodelsid
        spec:
          mysql:
            database: classicmodelsid
            host: \$(host)
            name: classicmodelsid
            password: \$(password)
            port: \$(port)
            url: ""
            user: \$(username)
      extraSecrets:
      - gras-mysql-conn-credential
      ingress: true
      initContainers:
      - name: init-db
        spec:
          command:
          - bash
          - -c
          - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
            -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql
            -h \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid;
            SET @tablename := (select table_name from information_schema.tables where
            table_type = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1);
            set @qry1:= concat('select * from ',@tablename,' limit 1'); prepare stmt
            from @qry1 ; execute stmt ;" ; then echo "database already exists...";
            else curl -o /tmp/classicmodelsid.sql https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
            mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
            fi;
          image: mysql
          name: init-db
      models:
      - name: customer
        spec:
          base: Entity
          name: customer
          properties:
            customername:
              type: string
            datecreated:
              required: false
              type: date
            datelastupdated:
              required: false
              type: date
            emaildomain:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      - name: email
        spec:
          base: Entity
          name: email
          properties:
            email:
              required: true
              type: string
            emaildomain:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      - name: cluster
        spec:
          base: Entity
          name: cluster
          properties:
            clusterdns:
              type: string
            clusteridentifier:
              type: string
            clustername:
              type: string
            customerId:
              type: string
            datecreated:
              required: false
              type: date
            datelastupdated:
              required: false
              type: date
            emailId:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      restcruds:
      - name: classicmodelsid
        spec:
          datasource: classicmodelsid
  gruims:
  - name: gras-mysql
    spec:
      additionalpackages: ""
      config: ""
      style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
  name: gras-mysql
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApplicationSet
    name: gras-mysql-j89ql
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:21:15Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:21:25Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)


grpl_mdl_int_mysql_grapi=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApi
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-mdl-int
  creationTimestamp: "2024-12-06T13:21:17Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: grapi
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-mdl-int
  resourceVersion: "267303"
  uid: 5d85761b-e91e-4f97-ac86-55b58449c652
spec:
  asname: gras-mysql
  automigrate: true
  autorestartgruim: false
  compositeDeletePolicy: Background
  compositionRef:
    name: grapi.grsf.grpl.io
  compositionRevisionRef:
    name: grapi.grsf.grpl.io-64e9461
  compositionUpdatePolicy: Automatic
  datasources:
  - name: classicmodelsid
    spec:
      mysql:
        connector: mysql
        database: classicmodelsid
        host: \$(host)
        name: classicmodelsid
        password: \$(password)
        port: \$(port)
        url: ""
        user: \$(username)
  extraSecrets:
  - gras-mysql-conn-credential
  ingress: true
  initContainers:
  - name: init-db
    spec:
      command:
      - bash
      - -c
      - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
        -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql -h
        \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid; SET
        @tablename := (select table_name from information_schema.tables where table_type
        = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1); set @qry1:=
        concat('select * from ',@tablename,' limit 1'); prepare stmt from @qry1 ;
        execute stmt ;" ; then echo "database already exists..."; else curl -o /tmp/classicmodelsid.sql
        https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
        mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
        fi;
      image: mysql
      name: init-db
  models:
  - name: customer
    spec:
      base: Entity
      name: customer
      properties:
        customername:
          type: string
        datecreated:
          required: false
          type: date
        datelastupdated:
          required: false
          type: date
        emaildomain:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  - name: email
    spec:
      base: Entity
      name: email
      properties:
        email:
          required: true
          type: string
        emaildomain:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  - name: cluster
    spec:
      base: Entity
      name: cluster
      properties:
        clusterdns:
          type: string
        clusteridentifier:
          type: string
        clustername:
          type: string
        customerId:
          type: string
        datecreated:
          required: false
          type: date
        datelastupdated:
          required: false
          type: date
        emailId:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApi
    name: gras-mysql-xrw76
  restcruds:
  - name: classicmodelsid
    spec:
      datasource: classicmodelsid
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:21:17Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:21:27Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)


grpl_mdl_int_mysql_gruim=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleUiModule
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-mdl-int
  creationTimestamp: "2024-12-06T13:21:17Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: gruim
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-mdl-int
  resourceVersion: "267217"
  uid: 04466692-ab72-40f5-bb3b-970564048c97
spec:
  additionalpackages: ""
  asname: gras-mysql
  compositeDeletePolicy: Background
  compositionRef:
    name: gruim.grsf.grpl.io
  compositionRevisionRef:
    name: gruim.grsf.grpl.io-c341603
  compositionUpdatePolicy: Automatic
  config: ""
  mapi: grpl-mdl-int-gras-mysql-grapi-mapi
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleUiModule
    name: gras-mysql-sg7gr
  style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:21:17Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:21:23Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_mdl_ext_mysql_gras=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApplicationSet
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql
    meta.helm.sh/release-namespace: grpl-mdl-ext
  creationTimestamp: "2024-12-06T13:25:15Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-mdl-ext
  resourceVersion: "269123"
  uid: e1b31bb1-36f1-4c60-a678-1a3ed8e4a763
spec:
  compositeDeletePolicy: Background
  compositionRef:
    name: gras.grsf.grpl.io
  compositionRevisionRef:
    name: gras.grsf.grpl.io-9611850
  compositionUpdatePolicy: Automatic
  grapis:
  - name: gras-mysql
    spec:
      automigrate: true
      datasources:
      - name: classicmodelsid
        spec:
          mysql:
            database: classicmodelsid
            host: \$(host)
            name: classicmodelsid
            password: \$(password)
            port: \$(port)
            url: ""
            user: \$(username)
      extraSecrets:
      - gras-mysql-conn-credential
      ingress: true
      initContainers:
      - name: init-db
        spec:
          command:
          - bash
          - -c
          - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
            -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql
            -h \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid;
            SET @tablename := (select table_name from information_schema.tables where
            table_type = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1);
            set @qry1:= concat('select * from ',@tablename,' limit 1'); prepare stmt
            from @qry1 ; execute stmt ;" ; then echo "database already exists...";
            else curl -o /tmp/classicmodelsid.sql https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
            mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
            fi;
          image: mysql
          name: init-db
      models:
      - name: customer
        spec:
          base: Entity
          name: customer
          properties:
            customername:
              type: string
            datecreated:
              required: false
              type: date
            datelastupdated:
              required: false
              type: date
            emaildomain:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      - name: email
        spec:
          base: Entity
          name: email
          properties:
            email:
              required: true
              type: string
            emaildomain:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      - name: cluster
        spec:
          base: Entity
          name: cluster
          properties:
            clusterdns:
              type: string
            clusteridentifier:
              type: string
            clustername:
              type: string
            customerId:
              type: string
            datecreated:
              required: false
              type: date
            datelastupdated:
              required: false
              type: date
            emailId:
              required: true
              type: string
            id:
              generated: true
              id: true
              required: true
              type: number
      restcruds:
      - name: classicmodelsid
        spec:
          datasource: classicmodelsid
  gruims:
  - name: gras-mysql
    spec:
      additionalpackages: ""
      config: ""
      style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
  name: gras-mysql
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApplicationSet
    name: gras-mysql-g85tf
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:25:15Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:25:25Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_mdl_ext_mysql_grapi=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApi
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-mdl-ext
  creationTimestamp: "2024-12-06T13:25:17Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: grapi
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-mdl-ext
  resourceVersion: "269076"
  uid: 924ff14d-1ac2-42e3-94c4-25ac01d2c8a1
spec:
  asname: gras-mysql
  automigrate: true
  autorestartgruim: false
  compositeDeletePolicy: Background
  compositionRef:
    name: grapi.grsf.grpl.io
  compositionRevisionRef:
    name: grapi.grsf.grpl.io-64e9461
  compositionUpdatePolicy: Automatic
  datasources:
  - name: classicmodelsid
    spec:
      mysql:
        connector: mysql
        database: classicmodelsid
        host: \$(host)
        name: classicmodelsid
        password: \$(password)
        port: \$(port)
        url: ""
        user: \$(username)
  extraSecrets:
  - gras-mysql-conn-credential
  ingress: true
  initContainers:
  - name: init-db
    spec:
      command:
      - bash
      - -c
      - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
        -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql -h
        \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid; SET
        @tablename := (select table_name from information_schema.tables where table_type
        = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1); set @qry1:=
        concat('select * from ',@tablename,' limit 1'); prepare stmt from @qry1 ;
        execute stmt ;" ; then echo "database already exists..."; else curl -o /tmp/classicmodelsid.sql
        https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
        mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
        fi;
      image: mysql
      name: init-db
  models:
  - name: customer
    spec:
      base: Entity
      name: customer
      properties:
        customername:
          type: string
        datecreated:
          required: false
          type: date
        datelastupdated:
          required: false
          type: date
        emaildomain:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  - name: email
    spec:
      base: Entity
      name: email
      properties:
        email:
          required: true
          type: string
        emaildomain:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  - name: cluster
    spec:
      base: Entity
      name: cluster
      properties:
        clusterdns:
          type: string
        clusteridentifier:
          type: string
        clustername:
          type: string
        customerId:
          type: string
        datecreated:
          required: false
          type: date
        datelastupdated:
          required: false
          type: date
        emailId:
          required: true
          type: string
        id:
          generated: true
          id: true
          required: true
          type: number
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApi
    name: gras-mysql-j6gph
  restcruds:
  - name: classicmodelsid
    spec:
      datasource: classicmodelsid
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:25:17Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:25:24Z"
    reason: Available
    status: "True"
    type: Ready

EOM
)

grpl_mdl_ext_mysql_gruim=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleUiModule
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-mdl-ext
  creationTimestamp: "2024-12-06T13:25:17Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: gruim
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-mdl-ext
  resourceVersion: "269177"
  uid: de1218f0-bed7-4be6-a725-901dcff215d5
spec:
  additionalpackages: ""
  asname: gras-mysql
  compositeDeletePolicy: Background
  compositionRef:
    name: gruim.grsf.grpl.io
  compositionRevisionRef:
    name: gruim.grsf.grpl.io-c341603
  compositionUpdatePolicy: Automatic
  config: ""
  mapi: grpl-mdl-ext-gras-mysql-grapi-mapi
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleUiModule
    name: gras-mysql-l9l6m
  style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:25:17Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:25:27Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_disc_int_mysql_gras=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApplicationSet
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql
    meta.helm.sh/release-namespace: grpl-disc-int
  creationTimestamp: "2024-12-06T13:29:09Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-disc-int
  resourceVersion: "271006"
  uid: 7de176c5-b9e3-412b-ba5a-5ae7443a0f06
spec:
  compositeDeletePolicy: Background
  compositionRef:
    name: gras.grsf.grpl.io
  compositionRevisionRef:
    name: gras.grsf.grpl.io-9611850
  compositionUpdatePolicy: Automatic
  grapis:
  - name: gras-mysql
    spec:
      datasources:
      - name: classicmodelsid
        spec:
          mysql:
            database: classicmodelsid
            host: \$(host)
            name: classicmodelsid
            password: \$(password)
            port: \$(port)
            url: ""
            user: \$(username)
      discoveredrepos: true
      discoveries:
      - name: classicmodelsid
        spec:
          all: true
          dataSource: classicmodelsid
          disableCamelCase: false
          schema: classicmodelsid
      extraSecrets:
      - gras-mysql-conn-credential
      ingress: true
      initContainers:
      - name: init-db
        spec:
          command:
          - bash
          - -c
          - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
            -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql
            -h \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid;
            SET @tablename := (select table_name from information_schema.tables where
            table_type = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1);
            set @qry1:= concat('select * from ',@tablename,' limit 1'); prepare stmt
            from @qry1 ; execute stmt ;" ; then echo "database already exists...";
            else curl -o /tmp/classicmodelsid.sql https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
            mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
            fi;
          image: mysql
          name: init-db
      relations:
      - name: employees
        spec:
          destinationModel: Employees
          foreignKeyName: employeesId
          registerInclusionResolver: true
          relationName: employees
          relationType: belongsTo
          sourceModel: Customers
      restcruds:
      - name: classicmodelsid
        spec:
          datasource: classicmodelsid
  gruims:
  - name: gras-mysql
    spec:
      additionalpackages: ""
      config: ""
      style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
  name: gras-mysql
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApplicationSet
    name: gras-mysql-pq9tv
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:29:09Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:29:19Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_disc_int_mysql_grapi=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApi
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-disc-int
  creationTimestamp: "2024-12-06T13:29:10Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: grapi
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-disc-int
  resourceVersion: "271108"
  uid: 1499381b-6862-4625-912c-bf771890fb1e
spec:
  asname: gras-mysql
  autorestartgruim: false
  compositeDeletePolicy: Background
  compositionRef:
    name: grapi.grsf.grpl.io
  compositionRevisionRef:
    name: grapi.grsf.grpl.io-64e9461
  compositionUpdatePolicy: Automatic
  datasources:
  - name: classicmodelsid
    spec:
      mysql:
        connector: mysql
        database: classicmodelsid
        host: \$(host)
        name: classicmodelsid
        password: \$(password)
        port: \$(port)
        url: ""
        user: \$(username)
  discoveredrepos: true
  discoveries:
  - name: classicmodelsid
    spec:
      all: true
      dataSource: classicmodelsid
      disableCamelCase: false
      schema: classicmodelsid
  extraSecrets:
  - gras-mysql-conn-credential
  ingress: true
  initContainers:
  - name: init-db
    spec:
      command:
      - bash
      - -c
      - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
        -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql -h
        \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid; SET
        @tablename := (select table_name from information_schema.tables where table_type
        = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1); set @qry1:=
        concat('select * from ',@tablename,' limit 1'); prepare stmt from @qry1 ;
        execute stmt ;" ; then echo "database already exists..."; else curl -o /tmp/classicmodelsid.sql
        https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
        mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
        fi;
      image: mysql
      name: init-db
  relations:
  - name: employees
    spec:
      destinationModel: Employees
      foreignKeyName: employeesId
      registerInclusionResolver: true
      relationName: employees
      relationType: belongsTo
      sourceModel: Customers
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApi
    name: gras-mysql-gs672
  restcruds:
  - name: classicmodelsid
    spec:
      datasource: classicmodelsid
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:29:11Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:29:25Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_disc_int_mysql_gruim=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleUiModule
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-disc-int
  creationTimestamp: "2024-12-06T13:29:10Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: gruim
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-disc-int
  resourceVersion: "270945"
  uid: f3e704b6-4e25-4e45-b5e0-ca357ea6f9ca
spec:
  additionalpackages: ""
  asname: gras-mysql
  compositeDeletePolicy: Background
  compositionRef:
    name: gruim.grsf.grpl.io
  compositionRevisionRef:
    name: gruim.grsf.grpl.io-c341603
  compositionUpdatePolicy: Automatic
  config: ""
  mapi: grpl-disc-int-gras-mysql-grapi-mapi
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleUiModule
    name: gras-mysql-wvpnk
  style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
status:
  conditions:
  - lastTransitionTime: "2024-12-06T13:29:11Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-06T13:29:18Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_disc_ext_mysql_gras=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApplicationSet
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql
    meta.helm.sh/release-namespace: grpl-disc-ext
  creationTimestamp: "2024-12-07T07:46:58Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-disc-ext
  resourceVersion: "277065"
  uid: a10348b6-c22f-4b79-afd5-24c8f3c98aa0
spec:
  compositeDeletePolicy: Background
  compositionRef:
    name: gras.grsf.grpl.io
  compositionRevisionRef:
    name: gras.grsf.grpl.io-9611850
  compositionUpdatePolicy: Automatic
  grapis:
  - name: gras-mysql
    spec:
      datasources:
      - name: classicmodelsid
        spec:
          mysql:
            database: classicmodelsid
            host: \$(host)
            name: classicmodelsid
            password: \$(password)
            port: \$(port)
            url: ""
            user: \$(username)
      discoveredrepos: true
      discoveries:
      - name: classicmodelsid
        spec:
          all: true
          dataSource: classicmodelsid
          disableCamelCase: false
          schema: classicmodelsid
      extraSecrets:
      - gras-mysql-conn-credential
      ingress: true
      initContainers:
      - name: init-db
        spec:
          command:
          - bash
          - -c
          - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
            -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql
            -h \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid;
            SET @tablename := (select table_name from information_schema.tables where
            table_type = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1);
            set @qry1:= concat('select * from ',@tablename,' limit 1'); prepare stmt
            from @qry1 ; execute stmt ;" ; then echo "database already exists...";
            else curl -o /tmp/classicmodelsid.sql https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
            mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
            fi;
          image: mysql
          name: init-db
      relations:
      - name: employees
        spec:
          destinationModel: Employees
          foreignKeyName: employeesId
          registerInclusionResolver: true
          relationName: employees
          relationType: belongsTo
          sourceModel: Customers
      restcruds:
      - name: classicmodelsid
        spec:
          datasource: classicmodelsid
  gruims:
  - name: gras-mysql
    spec:
      additionalpackages: ""
      config: ""
      style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
  name: gras-mysql
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApplicationSet
    name: gras-mysql-pmrqf
status:
  conditions:
  - lastTransitionTime: "2024-12-07T07:46:58Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-07T07:47:08Z"
    reason: Available
    status: "True"
    type: Ready

EOM
)

grpl_disc_ext_mysql_grapi=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleApi
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-disc-ext
  creationTimestamp: "2024-12-07T07:47:00Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: grapi
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-disc-ext
  resourceVersion: "277045"
  uid: 5cab9e9a-ef46-42af-9096-c82919c58787
spec:
  asname: gras-mysql
  autorestartgruim: false
  compositeDeletePolicy: Background
  compositionRef:
    name: grapi.grsf.grpl.io
  compositionRevisionRef:
    name: grapi.grsf.grpl.io-64e9461
  compositionUpdatePolicy: Automatic
  datasources:
  - name: classicmodelsid
    spec:
      mysql:
        connector: mysql
        database: classicmodelsid
        host: \$(host)
        name: classicmodelsid
        password: \$(password)
        port: \$(port)
        url: ""
        user: \$(username)
  discoveredrepos: true
  discoveries:
  - name: classicmodelsid
    spec:
      all: true
      dataSource: classicmodelsid
      disableCamelCase: false
      schema: classicmodelsid
  extraSecrets:
  - gras-mysql-conn-credential
  ingress: true
  initContainers:
  - name: init-db
    spec:
      command:
      - bash
      - -c
      - sleep 5; while ! mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password)
        -e "show databases;" 2>/dev/null; do echo -n .; sleep 2; done; if mysql -h
        \$(host) -P \$(port) -u \$(username) -p\$(password) -e "USE classicmodelsid; SET
        @tablename := (select table_name from information_schema.tables where table_type
        = 'BASE TABLE' and table_schema = 'classicmodelsid' limit 1); set @qry1:=
        concat('select * from ',@tablename,' limit 1'); prepare stmt from @qry1 ;
        execute stmt ;" ; then echo "database already exists..."; else curl -o /tmp/classicmodelsid.sql
        https://raw.githubusercontent.com/grapple-solutions/grapple-test-data/main/classicmodelsid/classicmodelsid.sql;
        mysql -h \$(host) -P \$(port) -u \$(username) -p\$(password) < /tmp/classicmodelsid.sql;
        fi;
      image: mysql
      name: init-db
  relations:
  - name: employees
    spec:
      destinationModel: Employees
      foreignKeyName: employeesId
      registerInclusionResolver: true
      relationName: employees
      relationType: belongsTo
      sourceModel: Customers
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleApi
    name: gras-mysql-zz4g5
  restcruds:
  - name: classicmodelsid
    spec:
      datasource: classicmodelsid
status:
  conditions:
  - lastTransitionTime: "2024-12-07T07:47:00Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-07T07:47:05Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)

grpl_disc_ext_mysql_gruim=$(cat <<'EOM'
apiVersion: grsf.grpl.io/v1alpha1
kind: GrappleUiModule
metadata:
  annotations:
    meta.helm.sh/release-name: gras-mysql-gras
    meta.helm.sh/release-namespace: grpl-disc-ext
  creationTimestamp: "2024-12-07T07:47:00Z"
  finalizers:
  - finalizer.apiextensions.crossplane.io
  generation: 4
  labels:
    app.kubernetes.io/component: gruim
    app.kubernetes.io/managed-by: Helm
  name: gras-mysql
  namespace: grpl-disc-ext
  resourceVersion: "277080"
  uid: 93af636d-9e3d-4ee7-a312-e797681b7eef
spec:
  additionalpackages: ""
  asname: gras-mysql
  compositeDeletePolicy: Background
  compositionRef:
    name: gruim.grsf.grpl.io
  compositionRevisionRef:
    name: gruim.grsf.grpl.io-c341603
  compositionUpdatePolicy: Automatic
  config: ""
  mapi: grpl-disc-ext-gras-mysql-grapi-mapi
  resourceRef:
    apiVersion: grsf.grpl.io/v1alpha1
    kind: CompositeGrappleUiModule
    name: gras-mysql-s6zpr
  style: '{"colors":{"primary":{"DEFAULT":"#004a99","fg":"#ffffff"},"accent":{"DEFAULT":"#fa7252","fg":"#ffffff"}}}'
status:
  conditions:
  - lastTransitionTime: "2024-12-07T07:47:00Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
  - lastTransitionTime: "2024-12-07T07:47:10Z"
    reason: Available
    status: "True"
    type: Ready
EOM
)



declare -a gras_resources=(
    "------------ Following are the examples of gras resources ------------"
    "------------ Following is the example of gras database file resource example ------------"
    "$gras_db_file_gras"
    "------------ Following is the example of gras model internal resource example ------------"
    "$grpl_mdl_int_mysql_gras"
    "------------ Following is the example of gras model external resource example ------------"
    "$grpl_mdl_ext_mysql_gras"
    "------------ Following is the example of gras discovery internal resource example ------------"
    "$grpl_disc_int_mysql_gras"
    "------------ Following is the example of gras discovery external resource example ------------"
    "$grpl_disc_ext_mysql_gras"
)

declare -a gruim_resources=(
    "------------ Following are the examples of gruim resources ------------"
    "------------ Following is the example of gruim database file resource example ------------"
    "$gras_db_file_gruim"
    "------------ Following is the example of gruim model internal resource example ------------"
    "$grpl_mdl_int_mysql_gruim"
    "------------ Following is the example of gruim model external resource example ------------"
    "$grpl_mdl_ext_mysql_gruim"
    "------------ Following is the example of gruim discovery internal resource example ------------"
    "$grpl_disc_int_mysql_gruim"
    "------------ Following is the example of gruim discovery external resource example ------------"
    "$grpl_disc_ext_mysql_gruim"
)

declare -a grapi_resources=(
    "------------ Following are the examples of grapi resources ------------"
    "------------ Following is the example of grapi database file resource example ------------"
    "$gras_db_file_grapi"
    "------------ Following is the example of grapi model internal resource example ------------"
    "$grpl_mdl_int_mysql_grapi"
    "------------ Following is the example of grapi model external resource example ------------"
    "$grpl_mdl_ext_mysql_grapi"
    "------------ Following is the example of grapi discovery internal resource example ------------"
    "$grpl_disc_int_mysql_grapi"
    "------------ Following is the example of grapi discovery external resource example ------------"
    "$grpl_disc_ext_mysql_grapi"
)

declare -A grpl_gras_resource_dict=(
    ["grappleuimodules.grsf.grpl.io"]="${gruim_resources[@]}"
    ["grappleapis.grsf.grpl.io"]="${grapi_resources[@]}"
    ["grappleapplicationsets.grsf.grpl.io"]="${gras_resources[@]}"
)

